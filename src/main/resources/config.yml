# CarbonChat Docs:
# https://github.com/Draycia/Chat/wiki

# Set this to false to disable warnings and tips when the plugin thinks there may be configuration issues.
show-tips: true

# All of the settings under this 'default' section can be applied to each channel individually to override these.
# These are provided as a way to configure default channel settings.
default:
  # switch-message, toggle-off-message and toggle-on-message support PlaceholderAPI
  switch-message: '<gray>You are now in <color><channel> <gray>chat!'
  switch-other-message: '<gray><player> <reset><gray>is now in <color><channel> <gray>chat!'
  switch-failure-message: '<red>You cannot use channel <channel>!'
  toggle-on-message: '<gray>You can now see <color><channel> <gray>chat!'
  toggle-off-message: '<gray>You can no longer see <color><channel> <gray>chat!'
  toggle-other-on: '<gray><player> <reset><gray>can now see <color><channel> <gray>chat!'
  toggle-other-off: '<gray><player> <reset><gray>can no longer see <color><channel> <gray>chat!'
  cannot-use-channel: 'You cannot use that channel!'
  cannot-ignore-message: '<red>You cannot ignore that channel!'
  formats:
    # Placeholders: <username>, <displayname>, <channel>, <server>, <message>, <primaryrole>, <color>
    # Also supports PlaceholderAPI
    staff: '<white>Staff <<displayname><reset><white>> <message>'
    default: '<white>Player <<displayname><reset><white>> <message>'
  # CarbonChat will look for a matching group in the list below when choosing which group to use for formatting.
  # If there are no matches, the plugin will fall back to the primary-group-only option.
  # It's advised to set this option to [] if you don't want to use this.
  format-groups:
    - Owner
    - Admin
    - Moderator
    - VIP
  # If set to true, players with the permission carbonchat.group.groupname will count as having
  # The group with the name groupname (carbonchat.group.owner will count has having the group owner)
  permission-group-matching: false
  # If true, plugin will only use the format corresponding to the user's primary group (vault).
  # If false, plugin will look through the user's groups and go with the first group with a corresponding format.
  primary-group-only: true
  # The name of the vault group which should be considered as the default group.
  default-group: 'default'
  # Contexts are optional settings that modify the way channels behave.
  # For information on each contexts option, see the docs here :
  # https://github.com/Draycia/Carbon/wiki/Contexts
  contexts:
    # Used to set the range players have to be within to chat to each other
    # -1 to disable, 0 to set to world only, 1+ to set the distance.
    # EG. distance: 250 would require the players to be within 250 blocks to see each other's messages
    distance: -1
    # Requires both players to be in the same party to see the message.
    mcmmo-party: false
    # Requires both players to be in the same region to see the message.
    worldguard-region: false
    # Requires both players to be in the same town to see the message.
    towny-town: false
    # Modifies / prevents messages depending on how filters are setup.
    filter: true
    # requires a minimum balance to chat. 0 to disable. Requires a vault-compatible economy plugin
    vault-balance: 0
    # charges on every chat message. 0 to disable. Requires a vault-compatible economy plugin
    vault-cost: 0
  # The <color> placeholder in channel formats (and other formats).
  # This option does support PlaceholderAPI placeholders, however the resulting string must be a valid color!
  color: '#FFFFFF'
  # Can players /toggle this channel and hide its messages?
  ignorable: true
  # Enables/disables cross server chat for this channel.
  # Requires one of the message-system options to be set.
  is-cross-server: true
  # For plugin compatibility. If true, all chat messages sent will be "canceled".
  # The messages will still go through, however other plugins should assume they didn't.
  # As such, setting this on private channels is recommended.
  # For example, use this if DiscordSRV is sending messages when you don't want it to.
  cancel-message-event: false
  # For plugin compatibility. If true, this channel will use bukkit's list of players to send the messages to.
  # It's advised to leave this off unless absolutely necessary.
  honors-recipient-list: false

channels:
  global:
    name: 'Global'
    aliases: 'global|g'
    # If this channel is the default channel
    default: true
    # If the player speaks in chat, and their message starts with the following, their message
    # is automatically sent in this channel. This setting is entirely optional.
    message-prefix: '#'
  announcements:
    name: 'Announcements'
    formats:
      default: '<gold>Broadcast: <yellow><message>'
      staff: '<gold>Broadcast: <yellow><message>'
    ignorable: false
    is-cross-server: false
    message-prefix: '!'

# Global context options
contexts:
  Towny:
    cancellation-message: '<red>You do not belong to a town!'
  mcMMO:
    cancellation-message: '<red>You do not have a party!'

# Used for <server> placeholder in channel formats
server-name: 'Server'

item-link-placeholders:
  - '[item]'
  - '%item%'

# The prefix shown when spying on a user's message
spy-prefix: '<color>[SPY] '

# Determines if the player's tab menu name is updated with /nickname
nicknames-set-tab-name: true

# Plays a sound and highlights the message when someone types your name
pings:
  enabled: true
  source: 'PLAYER'
  sound: 'minecraft:entity.experience_orb.pickup'
  prefix: '@'
  volume: 10.0
  pitch: 1.0
  # highlight: true # currently disabled and nonfunctional

# Plays a sound when receiving private messages with /whisper /msg
whisper:
  pings:
    enabled: true
    source: 'PLAYER'
    sound: 'minecraft:entity.experience_orb.pickup'
    volume: 10.0
    pitch: 1.0

# Options:
# 'JSON' - Uses JSON text files to store player data
# 'MySQL' - Uses MySQL to store player data
storage:
  type: JSON
  username: 'username'
  password: 'password'
  database: 'database'
  hostname: 'localhost'
  port: 3306

# Options:
# 'bungee' - Uses bungee plugin messaging, requires BungeeCord or another proxy which supports it (Velocity!)
# 'redis' - Uses redis for cross server syncing, does not require a server proxy
# 'none' - Do not sync anything cross server, this is the default
#
# Note: In order for channels to sync cross server, you'll need to enable is-cross-server for the
#   channel as well as this setting.
message-system: 'none'

redis:
  host: 'localhost'
  port: 6379
  #password: 'password'
  database: 0
